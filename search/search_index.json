{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LambentLight for FiveM and RedM FiveM and RedM Servers made easier LambentLight is a simple and easy to use Server Manager for CitizenFX Collective Projects (FiveM and RedM). It helps with tedious and repetitive tasks like updating CFX Builds and applying MySQL Database changes. Quick start Download the compressed file from GitHub or 5mods Extracts the contents of the file and run LambentLight.exe Press to access the settings On CFX License , press generate to open the licenses page and generate one After generating your license, press Make License Visible Paste it on the text field and press Save Close the Settings window Press to open the Data Folder Creator Insert the name of the Data Folder that you want to create and press Create Wait for the download of the required scripts is completed Press to start the server","title":"LambentLight"},{"location":"#lambentlight-for-fivem-and-redm","text":"","title":"LambentLight for FiveM and RedM "},{"location":"#fivem-and-redm-servers-made-easier","text":"LambentLight is a simple and easy to use Server Manager for CitizenFX Collective Projects (FiveM and RedM). It helps with tedious and repetitive tasks like updating CFX Builds and applying MySQL Database changes.","title":"FiveM and RedM Servers made easier"},{"location":"#quick-start","text":"Download the compressed file from GitHub or 5mods Extracts the contents of the file and run LambentLight.exe Press to access the settings On CFX License , press generate to open the licenses page and generate one After generating your license, press Make License Visible Paste it on the text field and press Save Close the Settings window Press to open the Data Folder Creator Insert the name of the Data Folder that you want to create and press Create Wait for the download of the required scripts is completed Press to start the server","title":"Quick start"},{"location":"getting-started/","text":"Getting started Installation Before installing LambentLight, make sure that you have .NET Framework 4.5.2 installed. The process is easy, just download the compressed file from GitHub or 5mods , extract it, and run LambentLight.exe . Warning Don't run LambentLight.exe from the compressed file, all of your data will be lost after restarting Windows. Usage To start, you need to add a CFX License. Press to open the settings and click Generate on CFX License . A web page will open on your default browser. You need to log in to generate a CFX License, so press sign in and follow the steps to use your FiveM/CFX Forum Account. After logging in, press New at the top of the page to create a new license. You need to fill all of the fields with the following information: Label : Here you can place any name that you want to identify this license Server IP address : Write 127.0.0.1 (you can use any IP, but this one will always work) Server type : Select either: Home hosted (if you are launching the server from your own home and your own computer) Dedicated server (if you have a computer or server dedicated for the FiveM/RedM Server) VPS (if you are using Amazon EC2, DigitalOcean or others) After filling the fields, click Generate . The license will be visible on the list, copy it and go back to the LambentLight settings window. Press Make License Visible to enable the text field, paste it and press save Save . The last step is creating a Data Folder. Press to open the Data Folder Creator, enter a name for your new folder and press Create . Then, wait until the Once you have completed all of the previous steps, press to launch your FiveM or RedM server. If you want to safely stop the server, press .","title":"Getting started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#installation","text":"Before installing LambentLight, make sure that you have .NET Framework 4.5.2 installed. The process is easy, just download the compressed file from GitHub or 5mods , extract it, and run LambentLight.exe . Warning Don't run LambentLight.exe from the compressed file, all of your data will be lost after restarting Windows.","title":"Installation"},{"location":"getting-started/#usage","text":"To start, you need to add a CFX License. Press to open the settings and click Generate on CFX License . A web page will open on your default browser. You need to log in to generate a CFX License, so press sign in and follow the steps to use your FiveM/CFX Forum Account. After logging in, press New at the top of the page to create a new license. You need to fill all of the fields with the following information: Label : Here you can place any name that you want to identify this license Server IP address : Write 127.0.0.1 (you can use any IP, but this one will always work) Server type : Select either: Home hosted (if you are launching the server from your own home and your own computer) Dedicated server (if you have a computer or server dedicated for the FiveM/RedM Server) VPS (if you are using Amazon EC2, DigitalOcean or others) After filling the fields, click Generate . The license will be visible on the list, copy it and go back to the LambentLight settings window. Press Make License Visible to enable the text field, paste it and press save Save . The last step is creating a Data Folder. Press to open the Data Folder Creator, enter a name for your new folder and press Create . Then, wait until the Once you have completed all of the previous steps, press to launch your FiveM or RedM server. If you want to safely stop the server, press .","title":"Usage"},{"location":"license/","text":"MIT License Copyright (c) 2019 Hannele Ruiz Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Software License"},{"location":"mysql/","text":"MySQL Database LambentLight allows you to automatically create the databases and tables that the resources need while they are being installed. It works with famous gamemodes like ESX and vRP! Warning You need to manually install the MySQL Driver(s) that your resource needs before the main one is installed (for example, esplugin_mysql before essentialmode and ESX ). First, you need to open the settings by pressing . On Connection URL press Make URL Visible and write/paste the MySQL Connection string for the database. A MySQL Connection string looks like this: Server=127.0.0.1;Uid=lemon;Pwd=isme; Where: 127.0.0.1 is the Server IP lemon is the User ID or Uid isme is the Password or Pwd Info The MySQL User needs to have access to create, modify and delete all of the databases in the server. Danger Don't use the Database parameter on the connection string, this will prevent LambentLight from managing the different databases that scripts require.","title":"MySQL Database"},{"location":"mysql/#mysql-database","text":"LambentLight allows you to automatically create the databases and tables that the resources need while they are being installed. It works with famous gamemodes like ESX and vRP! Warning You need to manually install the MySQL Driver(s) that your resource needs before the main one is installed (for example, esplugin_mysql before essentialmode and ESX ). First, you need to open the settings by pressing . On Connection URL press Make URL Visible and write/paste the MySQL Connection string for the database. A MySQL Connection string looks like this: Server=127.0.0.1;Uid=lemon;Pwd=isme; Where: 127.0.0.1 is the Server IP lemon is the User ID or Uid isme is the Password or Pwd Info The MySQL User needs to have access to create, modify and delete all of the databases in the server. Danger Don't use the Database parameter on the connection string, this will prevent LambentLight from managing the different databases that scripts require.","title":"MySQL Database"},{"location":"resources/","text":"Resource Manager LambentLight allows you to manage Resources, from the basics of Start, Stop and Restart to updating and installing new ones with a couple of clicks. To access it, you just need to select the Resources tab. Installing To install new resources, you need to select one of them in the Available for Installation area, and then the version. After that, you just press the Install button to download and save the selcted resource. If you have a MySQL Database configured and the resource comes with .sql files, you will be asked if you want to import them one by one (this behaviour can be changed in the configuration). Uninstalling The Uninstall procedure is the same as the Installation: You select a resource in the Installed list and press Uninstall . You will be asked if you are sure that you want to Uninstall the resource, just press Yes .","title":"Resource Manager"},{"location":"resources/#resource-manager","text":"LambentLight allows you to manage Resources, from the basics of Start, Stop and Restart to updating and installing new ones with a couple of clicks. To access it, you just need to select the Resources tab.","title":"Resource Manager"},{"location":"resources/#installing","text":"To install new resources, you need to select one of them in the Available for Installation area, and then the version. After that, you just press the Install button to download and save the selcted resource. If you have a MySQL Database configured and the resource comes with .sql files, you will be asked if you want to import them one by one (this behaviour can be changed in the configuration).","title":"Installing"},{"location":"resources/#uninstalling","text":"The Uninstall procedure is the same as the Installation: You select a resource in the Installed list and press Uninstall . You will be asked if you are sure that you want to Uninstall the resource, just press Yes .","title":"Uninstalling"},{"location":"api/about/","text":"About the REST API Danger The REST API is an experimental feature. Breaking changes might happen between releases. This is not a production ready feature. What is the REST API? The REST API is a RESTful JSON API for managing the FiveM Server via HTTP Requests. This allows you to control the server from anything that supports HTTP Requests like Discord Bots or Mobile Apps. How can I use it? To use the REST API, you need to enable it on the LambentLight settings: Then, you can call any of the following endpoints with the correct authentication :","title":"About"},{"location":"api/about/#about-the-rest-api","text":"Danger The REST API is an experimental feature. Breaking changes might happen between releases. This is not a production ready feature.","title":"About the REST API"},{"location":"api/about/#what-is-the-rest-api","text":"The REST API is a RESTful JSON API for managing the FiveM Server via HTTP Requests. This allows you to control the server from anything that supports HTTP Requests like Discord Bots or Mobile Apps.","title":"What is the REST API?"},{"location":"api/about/#how-can-i-use-it","text":"To use the REST API, you need to enable it on the LambentLight settings: Then, you can call any of the following endpoints with the correct authentication :","title":"How can I use it?"},{"location":"api/authentication/","text":"Authenticating your calls Tip Although is not recommended, you can disable the authentication by leaving the Token field empty and saving it. To use the endpoints, you need to authenticate your calls via the Authorization header, like this: Authorization: Bearer xpprPHN8xdsGC3HC0JS95lAVJiEJlUo5ocEAZiL+FMA= You can get your token by clicking \"Make token visible\" and copying from the text box: Info The header Authorization is case insensitive, see Are HTTP headers case-sensitive? on Stack Overflow for more information.","title":"Authentication"},{"location":"api/authentication/#authenticating-your-calls","text":"Tip Although is not recommended, you can disable the authentication by leaving the Token field empty and saving it. To use the endpoints, you need to authenticate your calls via the Authorization header, like this: Authorization: Bearer xpprPHN8xdsGC3HC0JS95lAVJiEJlUo5ocEAZiL+FMA= You can get your token by clicking \"Make token visible\" and copying from the text box: Info The header Authorization is case insensitive, see Are HTTP headers case-sensitive? on Stack Overflow for more information.","title":"Authenticating your calls"},{"location":"api/e_basics/","text":"Endpoints with Basic Information Get Basic Info GET / Description Returns a Basics object with some information about the current LambentLight instance. You can use this to check if LambentLight is running.","title":"Endpoints - Basics"},{"location":"api/e_basics/#endpoints-with-basic-information","text":"","title":"Endpoints with Basic Information"},{"location":"api/e_basics/#get-basic-info","text":"GET /","title":"Get Basic Info"},{"location":"api/e_basics/#description","text":"Returns a Basics object with some information about the current LambentLight instance. You can use this to check if LambentLight is running.","title":"Description"},{"location":"api/e_builds/","text":"Endpoints for Builds Get Builds GET /build Description Returns a list of Build objects. Refresh Builds POST /builds Description Refreshes the list of Builds in the manager and the UI. Returns a 204 No Content response on success.","title":"Endpoints - Builds"},{"location":"api/e_builds/#endpoints-for-builds","text":"","title":"Endpoints for Builds"},{"location":"api/e_builds/#get-builds","text":"GET /build","title":"Get Builds"},{"location":"api/e_builds/#description","text":"Returns a list of Build objects.","title":"Description"},{"location":"api/e_builds/#refresh-builds","text":"POST /builds","title":"Refresh Builds"},{"location":"api/e_builds/#description_1","text":"Refreshes the list of Builds in the manager and the UI. Returns a 204 No Content response on success.","title":"Description"},{"location":"api/e_datafolders/","text":"Endpoints for Data Folders Get Data Folders GET /datafolders Description Returns a list of Data Folder objects. Refresh Data Folders POST /datafolders Description Refreshes the list of Data Folders in the manager and the UI. Returns a 204 No Content response on success. Get Installed Resources GET /datafolders/{folder.name}/resources Description Returns a list of Installed Resource objects.","title":"Endpoints - Data Folders"},{"location":"api/e_datafolders/#endpoints-for-data-folders","text":"","title":"Endpoints for Data Folders"},{"location":"api/e_datafolders/#get-data-folders","text":"GET /datafolders","title":"Get Data Folders"},{"location":"api/e_datafolders/#description","text":"Returns a list of Data Folder objects.","title":"Description"},{"location":"api/e_datafolders/#refresh-data-folders","text":"POST /datafolders","title":"Refresh Data Folders"},{"location":"api/e_datafolders/#description_1","text":"Refreshes the list of Data Folders in the manager and the UI. Returns a 204 No Content response on success.","title":"Description"},{"location":"api/e_datafolders/#get-installed-resources","text":"GET /datafolders/{folder.name}/resources","title":"Get Installed Resources"},{"location":"api/e_datafolders/#description_2","text":"Returns a list of Installed Resource objects.","title":"Description"},{"location":"api/e_runtime/","text":"Endpoints for Controlling the Server Process Start Server POST /start Description Starts the server with the specified Build and Data Folder. Returns a 400 Bad Request if the Build or Data Folder does not exists, 409 Conflict if the server is already running or 204 No Content if the server started. JSON Parameters Name Description Build The ID of the Build (build.id) Folder The Name of the Data Folder (folder.name) Restart Server POST /restart Description Restarts the server. Returns a 409 Conflict if the server is not running or 204 No Content if the server was restarted. Stop Server POST /stop Description Stops the server. Returns a 409 Conflict if the server is not running or 204 No Content if the server was stopped. Send Command POST /command Description Sends a command to the server. Returns a 400 Bad Request if there is no command specified, 409 Conflict if the server is not running or 202 Accepted if the command was executed. We send 202 Accepted instead of 200 OK or 204 No Content because we don't know if the resource that accepts the command will execute the action instantly. JSON Parameters Name Description Command The command to execute","title":"Endpoints - Runtime"},{"location":"api/e_runtime/#endpoints-for-controlling-the-server-process","text":"","title":"Endpoints for Controlling the Server Process"},{"location":"api/e_runtime/#start-server","text":"POST /start","title":"Start Server"},{"location":"api/e_runtime/#description","text":"Starts the server with the specified Build and Data Folder. Returns a 400 Bad Request if the Build or Data Folder does not exists, 409 Conflict if the server is already running or 204 No Content if the server started.","title":"Description"},{"location":"api/e_runtime/#json-parameters","text":"Name Description Build The ID of the Build (build.id) Folder The Name of the Data Folder (folder.name)","title":"JSON Parameters"},{"location":"api/e_runtime/#restart-server","text":"POST /restart","title":"Restart Server"},{"location":"api/e_runtime/#description_1","text":"Restarts the server. Returns a 409 Conflict if the server is not running or 204 No Content if the server was restarted.","title":"Description"},{"location":"api/e_runtime/#stop-server","text":"POST /stop","title":"Stop Server"},{"location":"api/e_runtime/#description_2","text":"Stops the server. Returns a 409 Conflict if the server is not running or 204 No Content if the server was stopped.","title":"Description"},{"location":"api/e_runtime/#send-command","text":"POST /command","title":"Send Command"},{"location":"api/e_runtime/#description_3","text":"Sends a command to the server. Returns a 400 Bad Request if there is no command specified, 409 Conflict if the server is not running or 202 Accepted if the command was executed. We send 202 Accepted instead of 200 OK or 204 No Content because we don't know if the resource that accepts the command will execute the action instantly.","title":"Description"},{"location":"api/e_runtime/#json-parameters_1","text":"Name Description Command The command to execute","title":"JSON Parameters"},{"location":"api/objects/","text":"JSON Objects The following are all of the JSON Objects that the API can return: Basics Name Description version The version of LambentLight that is running is_running If the CFX server is running or not build A Build object if the server is running, null otherwise folder A Data Folder object if the server is running, null otherwise { \"version\": \"2.2.0.0\", \"is_running\": true } Build Name Description id The identifier of this build (either the folder name or number + SHA1 hash) exe_present If the executable is present on the build folder folder_present If there is a folder that has been used for this build is_cfx If this build is an official CFX Build { \"id\": \"2024-4097bd1aee1804eaa7d1120ec84bae795c80703d\", \"exe_present\": true, \"folder_present\": true, \"is_cfx\": true } Data Folder Name Description name The name of the Data Folder exists If the Data Folder exists (it might have been deleted before refreshing) has_config If this Data Folder has a configuration file ( server.cfg ) { \"name\": \"vRP\", \"exists\": true, \"has_config\": false } Installed Resource Name Description name The name of the folder where the resource is installed metadata_type The type of the metadata file, where 0 is __resource.lua and 1 is fxmanifest.lua { \"name\": \"redm-map-one\", \"metadata_type\": 1 }","title":"Objects"},{"location":"api/objects/#json-objects","text":"The following are all of the JSON Objects that the API can return:","title":"JSON Objects"},{"location":"api/objects/#basics","text":"Name Description version The version of LambentLight that is running is_running If the CFX server is running or not build A Build object if the server is running, null otherwise folder A Data Folder object if the server is running, null otherwise { \"version\": \"2.2.0.0\", \"is_running\": true }","title":"Basics"},{"location":"api/objects/#build","text":"Name Description id The identifier of this build (either the folder name or number + SHA1 hash) exe_present If the executable is present on the build folder folder_present If there is a folder that has been used for this build is_cfx If this build is an official CFX Build { \"id\": \"2024-4097bd1aee1804eaa7d1120ec84bae795c80703d\", \"exe_present\": true, \"folder_present\": true, \"is_cfx\": true }","title":"Build"},{"location":"api/objects/#data-folder","text":"Name Description name The name of the Data Folder exists If the Data Folder exists (it might have been deleted before refreshing) has_config If this Data Folder has a configuration file ( server.cfg ) { \"name\": \"vRP\", \"exists\": true, \"has_config\": false }","title":"Data Folder"},{"location":"api/objects/#installed-resource","text":"Name Description name The name of the folder where the resource is installed metadata_type The type of the metadata file, where 0 is __resource.lua and 1 is fxmanifest.lua { \"name\": \"redm-map-one\", \"metadata_type\": 1 }","title":"Installed Resource"},{"location":"development/metadata/","text":"Metadata Repositories Tip Common resources are those that can be installed in both RedM and FiveM. LambentLight gets the Resources and Builds from Metadata folders or repositories. They just contain JSON files that tell the program where to download the resources and the builds that the CitizenFX Collective has made. Because they are simple folders with text files, the format is pretty simple: builds.json contains a list of CFX Build identifiers (the URLs can't be changed, and this is intentional) resources contains the information of the resources that can be installed resources/common.json , resources/gtav.json and resources/rdr2.json contains the basic information for Common, FiveM and RedM resources (Name and Author only) resources/common , resources/gtav and resources/rdr2 contain files with the extended information of the resources (everything from the Download URLs, to manual patches that need to be done) Creating new Repositories First, you need to install the LambentLight tools . After that, you just need to: Open a console or terminal (on Windows, press WIN+R, write cmd and press enter/return) Change the working directory to the folder that you want to use ( cd /d YOUR_FOLDER_PATH_HERE ) Write python -m lambentlight newrepo and press enter The files required by LambentLight will be created Now you have a working Metadata folder that LambentLight can use. Testing new Metadata Folders Testing your new Metadata Folder is easy, you just need to add it in the LambentLight API Configuration.","title":"Metadata Repos"},{"location":"development/metadata/#metadata-repositories","text":"Tip Common resources are those that can be installed in both RedM and FiveM. LambentLight gets the Resources and Builds from Metadata folders or repositories. They just contain JSON files that tell the program where to download the resources and the builds that the CitizenFX Collective has made. Because they are simple folders with text files, the format is pretty simple: builds.json contains a list of CFX Build identifiers (the URLs can't be changed, and this is intentional) resources contains the information of the resources that can be installed resources/common.json , resources/gtav.json and resources/rdr2.json contains the basic information for Common, FiveM and RedM resources (Name and Author only) resources/common , resources/gtav and resources/rdr2 contain files with the extended information of the resources (everything from the Download URLs, to manual patches that need to be done)","title":"Metadata Repositories"},{"location":"development/metadata/#creating-new-repositories","text":"First, you need to install the LambentLight tools . After that, you just need to: Open a console or terminal (on Windows, press WIN+R, write cmd and press enter/return) Change the working directory to the folder that you want to use ( cd /d YOUR_FOLDER_PATH_HERE ) Write python -m lambentlight newrepo and press enter The files required by LambentLight will be created Now you have a working Metadata folder that LambentLight can use.","title":"Creating new Repositories"},{"location":"development/metadata/#testing-new-metadata-folders","text":"Testing your new Metadata Folder is easy, you just need to add it in the LambentLight API Configuration.","title":"Testing new Metadata Folders"},{"location":"development/tools/","text":"LambentLight Development Tools The LambentLight Development Tools are a collection of Python Scripts for creating and managing the Metadata folders/repos. Installing Python 3.7+ To use the LambentLight Development Tools, you need to install Python 3.7 or higher. Danger Python 3.8 crashes when used in combination with the scripts, don't use that set of versions. Go to the Python Releases Website Scroll down until you see Looking for a specific release? Select the latest version that starts with 3.7 (right now is 3.7.6 ) Scroll down until you see Files , and click on Windows x86-64 executable installer to download it Open the file and follow the instructions to install Python Installing the Tools To install the LambentLight Development Tools, you just need to run the following line: python -m pip install -U https://github.com/LambentLight/Metadata/archive/master.zip#egg=lambentlight After that, you can check if the scripts installed correctly by running: python -m lambentlight info","title":"Development Tools"},{"location":"development/tools/#lambentlight-development-tools","text":"The LambentLight Development Tools are a collection of Python Scripts for creating and managing the Metadata folders/repos.","title":"LambentLight Development Tools"},{"location":"development/tools/#installing-python-37","text":"To use the LambentLight Development Tools, you need to install Python 3.7 or higher. Danger Python 3.8 crashes when used in combination with the scripts, don't use that set of versions. Go to the Python Releases Website Scroll down until you see Looking for a specific release? Select the latest version that starts with 3.7 (right now is 3.7.6 ) Scroll down until you see Files , and click on Windows x86-64 executable installer to download it Open the file and follow the instructions to install Python","title":"Installing Python 3.7+"},{"location":"development/tools/#installing-the-tools","text":"To install the LambentLight Development Tools, you just need to run the following line: python -m pip install -U https://github.com/LambentLight/Metadata/archive/master.zip#egg=lambentlight After that, you can check if the scripts installed correctly by running: python -m lambentlight info","title":"Installing the Tools"}]}